// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Địa chỉ
model Address {
  id       Int       @id @default(autoincrement()) //khóa chính
  detail   String //Chi tiết số nhà, tên đường, khu chung cư, tòa,...
  district String //Quận, huyện
  ward     String //Xã
  city     String //Thành phố
  country  String //Quốc gia
  userId   Int // Khóa ngoại tham chiếu người dùng
  user     User      @relation(fields: [userId], references: [id]) // Quan hệ n-1 với người dùng
  receipts Receipt[]
}

enum RoleUser {
  CUSTOMER // Khách hàng
  EMPLOYEE // Nhân viên
  ADMIN // Admin
}

//Người dùng
model User {
  id        Int            @id @default(autoincrement())
  email     String         @unique
  name      String
  createdAt DateTime       @default(now())
  phone     String         @unique
  password  String
  avatar    String?
  role      RoleUser       @default(CUSTOMER)
  address   Address[]
  receipts  Receipt[]
  coupons   Coupon[]       @relation("UserCoupons")
  review    Review[]
  wishList  WishlistItem[]
}

model WishlistItem {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  addedAt   DateTime @default(now())
}

enum Status {
  PENDING // Đang chờ xác nhận
  PREPARING // Đang chuẩn bị
  SHIPPING // Đang vận chuyển
  COMPLETED // Hoàn thành
  CANCELLED // Đã hủy
}

//Hóa đơn
model Receipt {
  id          Int         @id @default(autoincrement())
  userID      Int
  user        User        @relation(fields: [userID], references: [id])
  addressID   Int
  address     Address     @relation(fields: [addressID], references: [id])
  totalAmount Float
  items       OrderItem[] @relation("InvoiceItems")
  status      Status      @default(PENDING)
  coupons     Coupon[]    @relation("ReceiptCoupons") // Các mã giảm giá được sử dụng cho hóa đơn này
}

//Chi tiết đơn hàng
model OrderItem {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  receiptId Int
  receipt   Receipt @relation("InvoiceItems", fields: [receiptId], references: [id]) // Hóa đơn liên quan
  quantity  Int
  price     Float
}

enum DiscountType {
  PERCENTAGE // Giảm theo phần trăm
  FIXED_AMOUNT // Giảm số tiền cố định
}

//Mã giảm giá
model Coupon {
  id            Int          @id @default(autoincrement()) // Khóa chính tự động tăng
  code          String       @unique // Mã giảm giá duy nhất
  discountType  DiscountType // Loại giảm giá (phần trăm hoặc số tiền)
  discountValue Float // Giá trị giảm (ví dụ: 10% hoặc 100k)
  maxUsage      Int? // Giới hạn số lần sử dụng, null nếu không giới hạn
  usageCount    Int          @default(0) // Số lần mã đã được sử dụng
  minOrderValue Float? // Giá trị đơn hàng tối thiểu để áp dụng mã
  startDate     DateTime? // Ngày bắt đầu hiệu lực của mã
  endDate       DateTime? // Ngày kết thúc hiệu lực của mã
  isActive      Boolean      @default(true) // Trạng thái mã giảm giá (còn hiệu lực hoặc không)
  users         User[]       @relation("UserCoupons") // Người dùng có thể được liên kết với mã giảm giá
  receipts      Receipt[]    @relation("ReceiptCoupons") // Liên kết với hóa đơn sử dụng mã giảm giá
}

//Danh mục
model Category {
  id          Int       @id @default(autoincrement()) // Khóa chính tự động tăng
  name        String    @unique // Tên danh mục, duy nhất
  description String? // Mô tả (tùy chọn)
  avatar      String
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now()) // Thời gian tạo danh mục
  updatedAt   DateTime  @updatedAt // Thời gian cập nhật danh mục
  products    Product[] // Liên kết với sản phẩm
}

//Sản phẩm
model Product {
  id                  Int            @id @default(autoincrement()) // Khóa chính tự động tăng  
  name                String         @unique // Tên sản phẩm
  categoryId          Int // Khóa ngoại tham chiếu danh mục
  category            Category       @relation(fields: [categoryId], references: [id]) // Liên kết với danh mục
  imageUrl            String? // Hình ảnh sản phẩm (URL)
  regularPrice        Float // Giá bán thường
  salePrice           Float? // Giá bán sản phẩm (có thể là giảm giá, có thể để trống)
  stockQuantity       Int            @default(0) // Số lượng trong kho
  shortDescription    String? // Mô tả ngắn
  detailedDescription String? // Mô tả chi tiết
  review              Review[] // Đánh giá (giá trị trung bình)
  viewCount           Int            @default(0) // Lượt xem
  purchaseCount       Int            @default(0) // Lượt mua
  createdAt           DateTime       @default(now()) // Thời gian tạo sản phẩm
  updatedAt           DateTime       @updatedAt // Thời gian cập nhật sản phẩm
  items               OrderItem[] // Liên kết với đơn hàng
  banner              Banner[]
  WishlistItem        WishlistItem[]
}

//Đánh giá
model Review {
  id        Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  productId Int // Khóa ngoại tham chiếu sản phẩm
  product   Product  @relation(fields: [productId], references: [id]) // Sản phẩm được đánh giá
  userId    Int // Khóa ngoại tham chiếu người dùng
  user      User     @relation(fields: [userId], references: [id]) // Người dùng đã đánh giá
  rating    Float // Điểm đánh giá (thường từ 1 đến 5)
  comment   String? // Nội dung bình luận (tùy chọn)
  createdAt DateTime @default(now()) // Thời gian tạo đánh giá
}

//Banner -- chỉ lưu trữ hình ảnh dùng cho banner
model Banner {
  id          Int      @id @default(autoincrement()) // Khóa chính tự động tăng
  title       String // Tiêu đề của banner
  description String? // Mô tả của banner (tùy chọn)
  imageUrl    String // URL hình ảnh của banner
  productId   Int
  product     Product  @relation(fields: [productId], references: [id])
  isActive    Boolean  @default(true) // Trạng thái hiển thị (mặc định là hiển thị)
  createdAt   DateTime @default(now()) // Thời gian tạo banner
  updatedAt   DateTime @updatedAt // Thời gian cập nhật banner
}

//Chuyên mục bài viết
model CategoryPost {
  id    Int    @id @default(autoincrement()) // Khóa chính tự động tăng
  name  String // Tên chuyên mục
  posts Post[] @relation("CategoryPosts") // Liên kết với nhiều bài viết
}

model Post {
  id           Int          @id @default(autoincrement()) // Khóa chính tự động tăng
  title        String // Tiêu đề bài viết
  imageUrl     String? // Hình ảnh bài viết (tùy chọn)
  categoryId   Int // Khóa ngoại tham chiếu chuyên mục
  categoryPost CategoryPost @relation("CategoryPosts", fields: [categoryId], references: [id]) // Chuyên mục liên quan
  content      String // Nội dung bài viết (có thể chứa nội dung từ file import)
  format       String //Định dạng bài viết
  createdAt    DateTime     @default(now()) // Thời gian tạo bài viết
  updatedAt    DateTime     @updatedAt // Thời gian cập nhật bài viết
}
